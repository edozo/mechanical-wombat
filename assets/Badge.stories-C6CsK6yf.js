import{j as z}from"./iframe-DholWbIL.js";import{B as X}from"./Badge-9BfyCA3D.js";import"./preload-helper-C1FmrZbK.js";import"./Badge.styles-Bqd1Xp8A.js";const w={title:"Components/Badge",component:X,argTypes:{color:{control:"color"},background:{control:"color"}}},r=_=>z.jsx(X,{..._}),a=r.bind({});a.args={children:"Default"};const e=r.bind({});e.args={color:"grayLighter",background:"primary",children:"Theme"};const s=r.bind({});s.args={color:"grayLighter",background:"secondary",children:"Theme"};const o=r.bind({});o.args={color:"#ff0",background:"#f60",children:"Random"};const c=r.bind({});c.args={color:"dodgerblue",background:"greenyellow",children:"Random"};const d=r.bind({});d.args={size:"small",children:"Small",background:"#E5EEFE"};const m=r.bind({});m.args={size:"xxsmall",children:"XSmall",background:"#E5EEFE"};var t,g,n;a.parameters={...a.parameters,docs:{...(t=a.parameters)==null?void 0:t.docs,source:{originalSource:"(args: BadgeProps) => <Badge {...args} />",...(n=(g=a.parameters)==null?void 0:g.docs)==null?void 0:n.source}}};var l,p,i;e.parameters={...e.parameters,docs:{...(l=e.parameters)==null?void 0:l.docs,source:{originalSource:"(args: BadgeProps) => <Badge {...args} />",...(i=(p=e.parameters)==null?void 0:p.docs)==null?void 0:i.source}}};var u,B,b;s.parameters={...s.parameters,docs:{...(u=s.parameters)==null?void 0:u.docs,source:{originalSource:"(args: BadgeProps) => <Badge {...args} />",...(b=(B=s.parameters)==null?void 0:B.docs)==null?void 0:b.source}}};var S,h,y;o.parameters={...o.parameters,docs:{...(S=o.parameters)==null?void 0:S.docs,source:{originalSource:"(args: BadgeProps) => <Badge {...args} />",...(y=(h=o.parameters)==null?void 0:h.docs)==null?void 0:y.source}}};var E,f,x;c.parameters={...c.parameters,docs:{...(E=c.parameters)==null?void 0:E.docs,source:{originalSource:"(args: BadgeProps) => <Badge {...args} />",...(x=(f=c.parameters)==null?void 0:f.docs)==null?void 0:x.source}}};var P,k,R;d.parameters={...d.parameters,docs:{...(P=d.parameters)==null?void 0:P.docs,source:{originalSource:"(args: BadgeProps) => <Badge {...args} />",...(R=(k=d.parameters)==null?void 0:k.docs)==null?void 0:R.source}}};var T,j,D;m.parameters={...m.parameters,docs:{...(T=m.parameters)==null?void 0:T.docs,source:{originalSource:"(args: BadgeProps) => <Badge {...args} />",...(D=(j=m.parameters)==null?void 0:j.docs)==null?void 0:D.source}}};const C=["Default","Primary","Secondary","RandomHex","RandomNamed","Small","XSmall"];export{a as Default,e as Primary,o as RandomHex,c as RandomNamed,s as Secondary,d as Small,m as XSmall,C as __namedExportsOrder,w as default};
